{
    "sourceFile": "frontend/src/components/Map_admin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1633813319072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1633813324122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     latitude: 7.8731,\r\n     longitude: 80.7718,\r\n     zoom: 6.5,\r\n   });\r\n-  {/const [showRegister, setShowRegister] = useState(false);\r\n-  const [showLogin, setShowLogin] = useState(false);\r\n+  {/*const [showRegister, setShowRegister] = useState(false);\r\n+  const [showLogin, setShowLogin] = useState(false);*/}\r\n \r\n   const handleMarkerClick = (id, lat, long) => {\r\n     setCurrentPlaceId(id);\r\n     setViewport({ ...viewport, latitude: lat, longitude: long });\r\n"
                },
                {
                    "date": 1633813417700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n               </div>\r\n             </Popup>\r\n           </>\r\n         )}\r\n-        {currentUsername ? (\r\n+        {/*{currentUsername ? (\r\n           <button className=\"button logout\" onClick={handleLogout}>\r\n             Log out\r\n           </button>\r\n         ) : (\r\n"
                },
                {
                    "date": 1633813430061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,9 +212,9 @@\n             setShowLogin={setShowLogin}\r\n             setCurrentUsername={setCurrentUsername}\r\n             myStorage={myStorage}\r\n           />\r\n-        )}\r\n+        )}*/}\r\n       </ReactMapGL>\r\n     </div>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1633813602453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import React from 'react'\r\n+import ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { Room, Star, StarBorder } from \"@material-ui/icons\";\r\n+import axios from \"axios\";\r\n+import { format } from \"timeago.js\";\r\n+import Register from \"./Register\";\r\n+import Login from \"./Login\";\r\n+\r\n+function Map_admin() {\r\n+  const myStorage = window.localStorage;\r\n+  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\r\n+  const [pins, setPins] = useState([]);\r\n+  const [currentPlaceId, setCurrentPlaceId] = useState(null);\r\n+  const [newPlace, setNewPlace] = useState(null);\r\n+  const [title, setTitle] = useState(null);\r\n+  const [desc, setDesc] = useState(null);\r\n+  const [star, setStar] = useState(0);\r\n+  const [viewport, setViewport] = useState({\r\n+    latitude: 7.8731,\r\n+    longitude: 80.7718,\r\n+    zoom: 6.5,\r\n+  });\r\n+  {/*const [showRegister, setShowRegister] = useState(false);\r\n+  const [showLogin, setShowLogin] = useState(false);*/}\r\n+\r\n+  const handleMarkerClick = (id, lat, long) => {\r\n+    setCurrentPlaceId(id);\r\n+    setViewport({ ...viewport, latitude: lat, longitude: long });\r\n+  };\r\n+\r\n+  const handleAddClick = (e) => {\r\n+    const [longitude, latitude] = e.lngLat;\r\n+    setNewPlace({\r\n+      lat: latitude,\r\n+      long: longitude,\r\n+    });\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    const newPin = {\r\n+      username: currentUsername,\r\n+      title,\r\n+      desc,\r\n+      rating: star,\r\n+      lat: newPlace.lat,\r\n+      long: newPlace.long,\r\n+    };\r\n+\r\n+    try {\r\n+      const res = await axios.post(\"/pins\", newPin);\r\n+      setPins([...pins, res.data]);\r\n+      setNewPlace(null);\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const getPins = async () => {\r\n+      try {\r\n+        const allPins = await axios.get(\"/pins\");\r\n+        setPins(allPins.data);\r\n+      } catch (err) {\r\n+        console.log(err);\r\n+      }\r\n+    };\r\n+    getPins();\r\n+  }, []);\r\n+\r\n+  const handleLogout = () => {\r\n+    setCurrentUsername(null);\r\n+    myStorage.removeItem(\"user\");\r\n+  };\r\n+\r\n+  return (\r\n+    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n+      <ReactMapGL\r\n+        {...viewport}\r\n+        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\r\n+        width=\"100%\"\r\n+        height=\"100%\"\r\n+        transitionDuration=\"200\"\r\n+        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\r\n+        onViewportChange={(viewport) => setViewport(viewport)}\r\n+        onDblClick={currentUsername && handleAddClick}\r\n+      >\r\n+        {pins.map((p) => (\r\n+          <>\r\n+            <Marker\r\n+              latitude={p.lat}\r\n+              longitude={p.long}\r\n+              offsetLeft={-3.5 * viewport.zoom}\r\n+              offsetTop={-7 * viewport.zoom}\r\n+            >\r\n+              <Room\r\n+                style={{\r\n+                  fontSize: 7 * viewport.zoom,\r\n+                  color:\r\n+                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\r\n+                  cursor: \"pointer\",\r\n+                }}\r\n+                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\r\n+              />\r\n+            </Marker>\r\n+            {p._id === currentPlaceId && (\r\n+              <Popup\r\n+                key={p._id}\r\n+                latitude={p.lat}\r\n+                longitude={p.long}\r\n+                closeButton={true}\r\n+                closeOnClick={false}\r\n+                onClose={() => setCurrentPlaceId(null)}\r\n+                anchor=\"left\"\r\n+              >\r\n+                <div className=\"card\">\r\n+                  <label>Place - </label>\r\n+                  <h4 className=\"place\"><b>{p.title}</b></h4>\r\n+                  <label>Description</label>\r\n+                  <h4><p className=\"desc\"><b>{p.desc}</b></p></h4>\r\n+                  <label>Rating</label>\r\n+                  <div className=\"stars\">\r\n+                    {Array(p.rating).fill(<Star className=\"star\" />)}\r\n+                  </div>\r\n+                  <label hidden>Information</label>\r\n+                  <span hidden className=\"username\">\r\n+                    Created by <b hidden>{p.username}</b>\r\n+                  </span>\r\n+                  <span hidden className=\"date\">{format(p.createdAt)}</span>\r\n+                </div>\r\n+              </Popup>\r\n+            )}\r\n+          </>\r\n+        ))}\r\n+        {newPlace && (\r\n+          <>\r\n+            <Marker\r\n+              latitude={newPlace.lat}\r\n+              longitude={newPlace.long}\r\n+              offsetLeft={-3.5 * viewport.zoom}\r\n+              offsetTop={-7 * viewport.zoom}\r\n+            >\r\n+              <Room\r\n+                style={{\r\n+                  fontSize: 7 * viewport.zoom,\r\n+                  color: \"tomato\",\r\n+                  cursor: \"pointer\",\r\n+                }}\r\n+              />\r\n+            </Marker>\r\n+            <Popup\r\n+              latitude={newPlace.lat}\r\n+              longitude={newPlace.long}\r\n+              closeButton={true}\r\n+              closeOnClick={false}\r\n+              onClose={() => setNewPlace(null)}\r\n+              anchor=\"left\"\r\n+            >\r\n+              <div>\r\n+                <form onSubmit={handleSubmit}>\r\n+                  <label>Title</label><br/>\r\n+                  <input\r\n+                    placeholder=\"Enter a title\"\r\n+                    autoFocus\r\n+                    onChange={(e) => setTitle(e.target.value)}\r\n+                  />\r\n+                  <br/>\r\n+                  <label>Description</label><br/>\r\n+                  <textarea\r\n+                    placeholder=\"Say us something about this place.\"\r\n+                    onChange={(e) => setDesc(e.target.value)}\r\n+                  />\r\n+                  <br/>\r\n+                  <label>Rating</label>\r\n+                  <select onChange={(e) => setStar(e.target.value)}>\r\n+                    <option value=\"1\">1</option>\r\n+                    <option value=\"2\">2</option>\r\n+                    <option value=\"3\">3</option>\r\n+                    <option value=\"4\">4</option>\r\n+                    <option value=\"5\">5</option>\r\n+                  </select>\r\n+                  <br/>\r\n+                  <button type=\"submit\" className=\"submitButton\">\r\n+                    Add Pin\r\n+                  </button>\r\n+                </form>\r\n+              </div>\r\n+            </Popup>\r\n+          </>\r\n+        )}\r\n+        {currentUsername ? (\r\n+          <button className=\"button logout\" onClick={handleLogout}>\r\n+            Log out\r\n+          </button>\r\n+        ) : (\r\n+          <div className=\"buttons\">\r\n+            <button className=\"button login\" onClick={() => setShowLogin(true)}>\r\n+              Log in\r\n+            </button>\r\n+            <button\r\n+              className=\"button register\"\r\n+              onClick={() => setShowRegister(true)}\r\n+            >\r\n+              Register\r\n+            </button>\r\n+          </div>\r\n+        )}\r\n+        {showRegister && <Register setShowRegister={setShowRegister} />}\r\n+        {showLogin && (\r\n+          <Login\r\n+            setShowLogin={setShowLogin}\r\n+            setCurrentUsername={setCurrentUsername}\r\n+            myStorage={myStorage}\r\n+          />\r\n+        )}\r\n+      </ReactMapGL>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default Map_admin\r\n"
                },
                {
                    "date": 1633813610040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n     latitude: 7.8731,\r\n     longitude: 80.7718,\r\n     zoom: 6.5,\r\n   });\r\n-  {/*const [showRegister, setShowRegister] = useState(false);\r\n-  const [showLogin, setShowLogin] = useState(false);*/}\r\n+  {/const [showRegister, setShowRegister] = useState(false);\r\n+  const [showLogin, setShowLogin] = useState(false);\r\n \r\n   const handleMarkerClick = (id, lat, long) => {\r\n     setCurrentPlaceId(id);\r\n     setViewport({ ...viewport, latitude: lat, longitude: long });\r\n@@ -219,226 +219,4 @@\n   );\r\n }\r\n \r\n export default Map_admin\r\n-import React from 'react'\r\n-import ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { Room, Star, StarBorder } from \"@material-ui/icons\";\r\n-import axios from \"axios\";\r\n-import { format } from \"timeago.js\";\r\n-import Register from \"./Register\";\r\n-import Login from \"./Login\";\r\n-\r\n-function Map_admin() {\r\n-  const myStorage = window.localStorage;\r\n-  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\r\n-  const [pins, setPins] = useState([]);\r\n-  const [currentPlaceId, setCurrentPlaceId] = useState(null);\r\n-  const [newPlace, setNewPlace] = useState(null);\r\n-  const [title, setTitle] = useState(null);\r\n-  const [desc, setDesc] = useState(null);\r\n-  const [star, setStar] = useState(0);\r\n-  const [viewport, setViewport] = useState({\r\n-    latitude: 7.8731,\r\n-    longitude: 80.7718,\r\n-    zoom: 6.5,\r\n-  });\r\n-  {/*const [showRegister, setShowRegister] = useState(false);\r\n-  const [showLogin, setShowLogin] = useState(false);*/}\r\n-\r\n-  const handleMarkerClick = (id, lat, long) => {\r\n-    setCurrentPlaceId(id);\r\n-    setViewport({ ...viewport, latitude: lat, longitude: long });\r\n-  };\r\n-\r\n-  const handleAddClick = (e) => {\r\n-    const [longitude, latitude] = e.lngLat;\r\n-    setNewPlace({\r\n-      lat: latitude,\r\n-      long: longitude,\r\n-    });\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    const newPin = {\r\n-      username: currentUsername,\r\n-      title,\r\n-      desc,\r\n-      rating: star,\r\n-      lat: newPlace.lat,\r\n-      long: newPlace.long,\r\n-    };\r\n-\r\n-    try {\r\n-      const res = await axios.post(\"/pins\", newPin);\r\n-      setPins([...pins, res.data]);\r\n-      setNewPlace(null);\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const getPins = async () => {\r\n-      try {\r\n-        const allPins = await axios.get(\"/pins\");\r\n-        setPins(allPins.data);\r\n-      } catch (err) {\r\n-        console.log(err);\r\n-      }\r\n-    };\r\n-    getPins();\r\n-  }, []);\r\n-\r\n-  const handleLogout = () => {\r\n-    setCurrentUsername(null);\r\n-    myStorage.removeItem(\"user\");\r\n-  };\r\n-\r\n-  return (\r\n-    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n-      <ReactMapGL\r\n-        {...viewport}\r\n-        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\r\n-        width=\"100%\"\r\n-        height=\"100%\"\r\n-        transitionDuration=\"200\"\r\n-        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\r\n-        onViewportChange={(viewport) => setViewport(viewport)}\r\n-        onDblClick={currentUsername && handleAddClick}\r\n-      >\r\n-        {pins.map((p) => (\r\n-          <>\r\n-            <Marker\r\n-              latitude={p.lat}\r\n-              longitude={p.long}\r\n-              offsetLeft={-3.5 * viewport.zoom}\r\n-              offsetTop={-7 * viewport.zoom}\r\n-            >\r\n-              <Room\r\n-                style={{\r\n-                  fontSize: 7 * viewport.zoom,\r\n-                  color:\r\n-                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\r\n-                  cursor: \"pointer\",\r\n-                }}\r\n-                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\r\n-              />\r\n-            </Marker>\r\n-            {p._id === currentPlaceId && (\r\n-              <Popup\r\n-                key={p._id}\r\n-                latitude={p.lat}\r\n-                longitude={p.long}\r\n-                closeButton={true}\r\n-                closeOnClick={false}\r\n-                onClose={() => setCurrentPlaceId(null)}\r\n-                anchor=\"left\"\r\n-              >\r\n-                <div className=\"card\">\r\n-                  <label>Place - </label>\r\n-                  <h4 className=\"place\"><b>{p.title}</b></h4>\r\n-                  <label>Description</label>\r\n-                  <h4><p className=\"desc\"><b>{p.desc}</b></p></h4>\r\n-                  <label>Rating</label>\r\n-                  <div className=\"stars\">\r\n-                    {Array(p.rating).fill(<Star className=\"star\" />)}\r\n-                  </div>\r\n-                  <label hidden>Information</label>\r\n-                  <span hidden className=\"username\">\r\n-                    Created by <b hidden>{p.username}</b>\r\n-                  </span>\r\n-                  <span hidden className=\"date\">{format(p.createdAt)}</span>\r\n-                </div>\r\n-              </Popup>\r\n-            )}\r\n-          </>\r\n-        ))}\r\n-        {newPlace && (\r\n-          <>\r\n-            <Marker\r\n-              latitude={newPlace.lat}\r\n-              longitude={newPlace.long}\r\n-              offsetLeft={-3.5 * viewport.zoom}\r\n-              offsetTop={-7 * viewport.zoom}\r\n-            >\r\n-              <Room\r\n-                style={{\r\n-                  fontSize: 7 * viewport.zoom,\r\n-                  color: \"tomato\",\r\n-                  cursor: \"pointer\",\r\n-                }}\r\n-              />\r\n-            </Marker>\r\n-            <Popup\r\n-              latitude={newPlace.lat}\r\n-              longitude={newPlace.long}\r\n-              closeButton={true}\r\n-              closeOnClick={false}\r\n-              onClose={() => setNewPlace(null)}\r\n-              anchor=\"left\"\r\n-            >\r\n-              <div>\r\n-                <form onSubmit={handleSubmit}>\r\n-                  <label>Title</label><br/>\r\n-                  <input\r\n-                    placeholder=\"Enter a title\"\r\n-                    autoFocus\r\n-                    onChange={(e) => setTitle(e.target.value)}\r\n-                  />\r\n-                  <br/>\r\n-                  <label>Description</label><br/>\r\n-                  <textarea\r\n-                    placeholder=\"Say us something about this place.\"\r\n-                    onChange={(e) => setDesc(e.target.value)}\r\n-                  />\r\n-                  <br/>\r\n-                  <label>Rating</label>\r\n-                  <select onChange={(e) => setStar(e.target.value)}>\r\n-                    <option value=\"1\">1</option>\r\n-                    <option value=\"2\">2</option>\r\n-                    <option value=\"3\">3</option>\r\n-                    <option value=\"4\">4</option>\r\n-                    <option value=\"5\">5</option>\r\n-                  </select>\r\n-                  <br/>\r\n-                  <button type=\"submit\" className=\"submitButton\">\r\n-                    Add Pin\r\n-                  </button>\r\n-                </form>\r\n-              </div>\r\n-            </Popup>\r\n-          </>\r\n-        )}\r\n-        {/*{currentUsername ? (\r\n-          <button className=\"button logout\" onClick={handleLogout}>\r\n-            Log out\r\n-          </button>\r\n-        ) : (\r\n-          <div className=\"buttons\">\r\n-            <button className=\"button login\" onClick={() => setShowLogin(true)}>\r\n-              Log in\r\n-            </button>\r\n-            <button\r\n-              className=\"button register\"\r\n-              onClick={() => setShowRegister(true)}\r\n-            >\r\n-              Register\r\n-            </button>\r\n-          </div>\r\n-        )}\r\n-        {showRegister && <Register setShowRegister={setShowRegister} />}\r\n-        {showLogin && (\r\n-          <Login\r\n-            setShowLogin={setShowLogin}\r\n-            setCurrentUsername={setCurrentUsername}\r\n-            myStorage={myStorage}\r\n-          />\r\n-        )}*/}\r\n-      </ReactMapGL>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default Map_admin\r\n"
                },
                {
                    "date": 1633857674367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     latitude: 7.8731,\r\n     longitude: 80.7718,\r\n     zoom: 6.5,\r\n   });\r\n-  {/const [showRegister, setShowRegister] = useState(false);\r\n+  const [showRegister, setShowRegister] = useState(false);\r\n   const [showLogin, setShowLogin] = useState(false);\r\n \r\n   const handleMarkerClick = (id, lat, long) => {\r\n     setCurrentPlaceId(id);\r\n@@ -48,9 +48,9 @@\n       long: newPlace.long,\r\n     };\r\n \r\n     try {\r\n-      const res = await axios.post(\"/pins\", newPin);\r\n+      const res = await axios.post(\"http://localhost:8070/pins\", newPin);\r\n       setPins([...pins, res.data]);\r\n       setNewPlace(null);\r\n     } catch (err) {\r\n       console.log(err);\r\n"
                },
                {
                    "date": 1633857703364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       long: newPlace.long,\r\n     };\r\n \r\n     try {\r\n-      const res = await axios.post(\"http://localhost:8070/pins\", newPin);\r\n+      const res = await axios.post(\"http://localhost:8070//pins\", newPin);\r\n       setPins([...pins, res.data]);\r\n       setNewPlace(null);\r\n     } catch (err) {\r\n       console.log(err);\r\n"
                },
                {
                    "date": 1633857711650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       long: newPlace.long,\r\n     };\r\n \r\n     try {\r\n-      const res = await axios.post(\"http://localhost:8070//pins\", newPin);\r\n+      const res = await axios.post(\"http://localhost:8070/api/pins/pins\", newPin);\r\n       setPins([...pins, res.data]);\r\n       setNewPlace(null);\r\n     } catch (err) {\r\n       console.log(err);\r\n"
                },
                {
                    "date": 1633857838645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import React from 'react'\r\n+import ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { Room, Star, StarBorder } from \"@material-ui/icons\";\r\n+import axios from \"axios\";\r\n+import { format } from \"timeago.js\";\r\n+import Register from \"./Register\";\r\n+import Login from \"./Login\";\r\n+\r\n+function Map_admin() {\r\n+  const myStorage = window.localStorage;\r\n+  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\r\n+  const [pins, setPins] = useState([]);\r\n+  const [currentPlaceId, setCurrentPlaceId] = useState(null);\r\n+  const [newPlace, setNewPlace] = useState(null);\r\n+  const [title, setTitle] = useState(null);\r\n+  const [desc, setDesc] = useState(null);\r\n+  const [star, setStar] = useState(0);\r\n+  const [viewport, setViewport] = useState({\r\n+    latitude: 7.8731,\r\n+    longitude: 80.7718,\r\n+    zoom: 6.5,\r\n+  });\r\n+  const [showRegister, setShowRegister] = useState(false);\r\n+  const [showLogin, setShowLogin] = useState(false);\r\n+\r\n+  const handleMarkerClick = (id, lat, long) => {\r\n+    setCurrentPlaceId(id);\r\n+    setViewport({ ...viewport, latitude: lat, longitude: long });\r\n+  };\r\n+\r\n+  const handleAddClick = (e) => {\r\n+    const [longitude, latitude] = e.lngLat;\r\n+    setNewPlace({\r\n+      lat: latitude,\r\n+      long: longitude,\r\n+    });\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    const newPin = {\r\n+      username: currentUsername,\r\n+      title,\r\n+      desc,\r\n+      rating: star,\r\n+      lat: newPlace.lat,\r\n+      long: newPlace.long,\r\n+    };\r\n+\r\n+    try {\r\n+      const res = await axios.post(\"http://localhost:8070/api/pins\", newPin);\r\n+      setPins([...pins, res.data]);\r\n+      setNewPlace(null);\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+    }\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const getPins = async () => {\r\n+      try {\r\n+        const allPins = await axios.get(\"http://localhost:8070/api/pins\");\r\n+        setPins(allPins.data);\r\n+      } catch (err) {\r\n+        console.log(err);\r\n+      }\r\n+    };\r\n+    getPins();\r\n+  }, []);\r\n+\r\n+  const handleLogout = () => {\r\n+    setCurrentUsername(null);\r\n+    myStorage.removeItem(\"user\");\r\n+  };\r\n+\r\n+  return (\r\n+    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n+      <ReactMapGL\r\n+        {...viewport}\r\n+        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\r\n+        width=\"100%\"\r\n+        height=\"100%\"\r\n+        transitionDuration=\"200\"\r\n+        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\r\n+        onViewportChange={(viewport) => setViewport(viewport)}\r\n+        onDblClick={currentUsername && handleAddClick}\r\n+      >\r\n+        {pins.map((p) => (\r\n+          <>\r\n+            <Marker\r\n+              latitude={p.lat}\r\n+              longitude={p.long}\r\n+              offsetLeft={-3.5 * viewport.zoom}\r\n+              offsetTop={-7 * viewport.zoom}\r\n+            >\r\n+              <Room\r\n+                style={{\r\n+                  fontSize: 7 * viewport.zoom,\r\n+                  color:\r\n+                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\r\n+                  cursor: \"pointer\",\r\n+                }}\r\n+                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\r\n+              />\r\n+            </Marker>\r\n+            {p._id === currentPlaceId && (\r\n+              <Popup\r\n+                key={p._id}\r\n+                latitude={p.lat}\r\n+                longitude={p.long}\r\n+                closeButton={true}\r\n+                closeOnClick={false}\r\n+                onClose={() => setCurrentPlaceId(null)}\r\n+                anchor=\"left\"\r\n+              >\r\n+                <div className=\"card\">\r\n+                  <label>Place - </label>\r\n+                  <h4 className=\"place\"><b>{p.title}</b></h4>\r\n+                  <label>Description</label>\r\n+                  <h4><p className=\"desc\"><b>{p.desc}</b></p></h4>\r\n+                  <label>Rating</label>\r\n+                  <div className=\"stars\">\r\n+                    {Array(p.rating).fill(<Star className=\"star\" />)}\r\n+                  </div>\r\n+                  <label hidden>Information</label>\r\n+                  <span hidden className=\"username\">\r\n+                    Created by <b hidden>{p.username}</b>\r\n+                  </span>\r\n+                  <span hidden className=\"date\">{format(p.createdAt)}</span>\r\n+                </div>\r\n+              </Popup>\r\n+            )}\r\n+          </>\r\n+        ))}\r\n+        {newPlace && (\r\n+          <>\r\n+            <Marker\r\n+              latitude={newPlace.lat}\r\n+              longitude={newPlace.long}\r\n+              offsetLeft={-3.5 * viewport.zoom}\r\n+              offsetTop={-7 * viewport.zoom}\r\n+            >\r\n+              <Room\r\n+                style={{\r\n+                  fontSize: 7 * viewport.zoom,\r\n+                  color: \"tomato\",\r\n+                  cursor: \"pointer\",\r\n+                }}\r\n+              />\r\n+            </Marker>\r\n+            <Popup\r\n+              latitude={newPlace.lat}\r\n+              longitude={newPlace.long}\r\n+              closeButton={true}\r\n+              closeOnClick={false}\r\n+              onClose={() => setNewPlace(null)}\r\n+              anchor=\"left\"\r\n+            >\r\n+              <div>\r\n+                <form onSubmit={handleSubmit}>\r\n+                  <label>Title</label><br/>\r\n+                  <input\r\n+                    placeholder=\"Enter a title\"\r\n+                    autoFocus\r\n+                    onChange={(e) => setTitle(e.target.value)}\r\n+                  />\r\n+                  <br/>\r\n+                  <label>Description</label><br/>\r\n+                  <textarea\r\n+                    placeholder=\"Say us something about this place.\"\r\n+                    onChange={(e) => setDesc(e.target.value)}\r\n+                  />\r\n+                  <br/>\r\n+                  <label>Rating</label>\r\n+                  <select onChange={(e) => setStar(e.target.value)}>\r\n+                    <option value=\"1\">1</option>\r\n+                    <option value=\"2\">2</option>\r\n+                    <option value=\"3\">3</option>\r\n+                    <option value=\"4\">4</option>\r\n+                    <option value=\"5\">5</option>\r\n+                  </select>\r\n+                  <br/>\r\n+                  <button type=\"submit\" className=\"submitButton\">\r\n+                    Add Pin\r\n+                  </button>\r\n+                </form>\r\n+              </div>\r\n+            </Popup>\r\n+          </>\r\n+        )}\r\n+        {currentUsername ? (\r\n+          <button className=\"button logout\" onClick={handleLogout}>\r\n+            Log out\r\n+          </button>\r\n+        ) : (\r\n+          <div className=\"buttons\">\r\n+            <button className=\"button login\" onClick={() => setShowLogin(true)}>\r\n+              Log in\r\n+            </button>\r\n+            <button\r\n+              className=\"button register\"\r\n+              onClick={() => setShowRegister(true)}\r\n+            >\r\n+              Register\r\n+            </button>\r\n+          </div>\r\n+        )}\r\n+        {showRegister && <Register setShowRegister={setShowRegister} />}\r\n+        {showLogin && (\r\n+          <Login\r\n+            setShowLogin={setShowLogin}\r\n+            setCurrentUsername={setCurrentUsername}\r\n+            myStorage={myStorage}\r\n+          />\r\n+        )}\r\n+      </ReactMapGL>\r\n+    </div>\r\n+  );\r\n+}\r\n+\r\n+export default Map_admin\r\n"
                },
                {
                    "date": 1633862175965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n             </Popup>\r\n           </>\r\n         )}\r\n         {currentUsername ? (\r\n-          <button className=\"button logout\" onClick={handleLogout}>\r\n+          <button hidden className=\"button logout\" onClick={handleLogout}>\r\n             Log out\r\n           </button>\r\n         ) : (\r\n           <div className=\"buttons\">\r\n@@ -219,226 +219,4 @@\n   );\r\n }\r\n \r\n export default Map_admin\r\n-import React from 'react'\r\n-import ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { Room, Star, StarBorder } from \"@material-ui/icons\";\r\n-import axios from \"axios\";\r\n-import { format } from \"timeago.js\";\r\n-import Register from \"./Register\";\r\n-import Login from \"./Login\";\r\n-\r\n-function Map_admin() {\r\n-  const myStorage = window.localStorage;\r\n-  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\r\n-  const [pins, setPins] = useState([]);\r\n-  const [currentPlaceId, setCurrentPlaceId] = useState(null);\r\n-  const [newPlace, setNewPlace] = useState(null);\r\n-  const [title, setTitle] = useState(null);\r\n-  const [desc, setDesc] = useState(null);\r\n-  const [star, setStar] = useState(0);\r\n-  const [viewport, setViewport] = useState({\r\n-    latitude: 7.8731,\r\n-    longitude: 80.7718,\r\n-    zoom: 6.5,\r\n-  });\r\n-  const [showRegister, setShowRegister] = useState(false);\r\n-  const [showLogin, setShowLogin] = useState(false);\r\n-\r\n-  const handleMarkerClick = (id, lat, long) => {\r\n-    setCurrentPlaceId(id);\r\n-    setViewport({ ...viewport, latitude: lat, longitude: long });\r\n-  };\r\n-\r\n-  const handleAddClick = (e) => {\r\n-    const [longitude, latitude] = e.lngLat;\r\n-    setNewPlace({\r\n-      lat: latitude,\r\n-      long: longitude,\r\n-    });\r\n-  };\r\n-\r\n-  const handleSubmit = async (e) => {\r\n-    e.preventDefault();\r\n-    const newPin = {\r\n-      username: currentUsername,\r\n-      title,\r\n-      desc,\r\n-      rating: star,\r\n-      lat: newPlace.lat,\r\n-      long: newPlace.long,\r\n-    };\r\n-\r\n-    try {\r\n-      const res = await axios.post(\"http://localhost:8070/api/pins/pins\", newPin);\r\n-      setPins([...pins, res.data]);\r\n-      setNewPlace(null);\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-    }\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const getPins = async () => {\r\n-      try {\r\n-        const allPins = await axios.get(\"/pins\");\r\n-        setPins(allPins.data);\r\n-      } catch (err) {\r\n-        console.log(err);\r\n-      }\r\n-    };\r\n-    getPins();\r\n-  }, []);\r\n-\r\n-  const handleLogout = () => {\r\n-    setCurrentUsername(null);\r\n-    myStorage.removeItem(\"user\");\r\n-  };\r\n-\r\n-  return (\r\n-    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n-      <ReactMapGL\r\n-        {...viewport}\r\n-        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\r\n-        width=\"100%\"\r\n-        height=\"100%\"\r\n-        transitionDuration=\"200\"\r\n-        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\r\n-        onViewportChange={(viewport) => setViewport(viewport)}\r\n-        onDblClick={currentUsername && handleAddClick}\r\n-      >\r\n-        {pins.map((p) => (\r\n-          <>\r\n-            <Marker\r\n-              latitude={p.lat}\r\n-              longitude={p.long}\r\n-              offsetLeft={-3.5 * viewport.zoom}\r\n-              offsetTop={-7 * viewport.zoom}\r\n-            >\r\n-              <Room\r\n-                style={{\r\n-                  fontSize: 7 * viewport.zoom,\r\n-                  color:\r\n-                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\r\n-                  cursor: \"pointer\",\r\n-                }}\r\n-                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\r\n-              />\r\n-            </Marker>\r\n-            {p._id === currentPlaceId && (\r\n-              <Popup\r\n-                key={p._id}\r\n-                latitude={p.lat}\r\n-                longitude={p.long}\r\n-                closeButton={true}\r\n-                closeOnClick={false}\r\n-                onClose={() => setCurrentPlaceId(null)}\r\n-                anchor=\"left\"\r\n-              >\r\n-                <div className=\"card\">\r\n-                  <label>Place - </label>\r\n-                  <h4 className=\"place\"><b>{p.title}</b></h4>\r\n-                  <label>Description</label>\r\n-                  <h4><p className=\"desc\"><b>{p.desc}</b></p></h4>\r\n-                  <label>Rating</label>\r\n-                  <div className=\"stars\">\r\n-                    {Array(p.rating).fill(<Star className=\"star\" />)}\r\n-                  </div>\r\n-                  <label hidden>Information</label>\r\n-                  <span hidden className=\"username\">\r\n-                    Created by <b hidden>{p.username}</b>\r\n-                  </span>\r\n-                  <span hidden className=\"date\">{format(p.createdAt)}</span>\r\n-                </div>\r\n-              </Popup>\r\n-            )}\r\n-          </>\r\n-        ))}\r\n-        {newPlace && (\r\n-          <>\r\n-            <Marker\r\n-              latitude={newPlace.lat}\r\n-              longitude={newPlace.long}\r\n-              offsetLeft={-3.5 * viewport.zoom}\r\n-              offsetTop={-7 * viewport.zoom}\r\n-            >\r\n-              <Room\r\n-                style={{\r\n-                  fontSize: 7 * viewport.zoom,\r\n-                  color: \"tomato\",\r\n-                  cursor: \"pointer\",\r\n-                }}\r\n-              />\r\n-            </Marker>\r\n-            <Popup\r\n-              latitude={newPlace.lat}\r\n-              longitude={newPlace.long}\r\n-              closeButton={true}\r\n-              closeOnClick={false}\r\n-              onClose={() => setNewPlace(null)}\r\n-              anchor=\"left\"\r\n-            >\r\n-              <div>\r\n-                <form onSubmit={handleSubmit}>\r\n-                  <label>Title</label><br/>\r\n-                  <input\r\n-                    placeholder=\"Enter a title\"\r\n-                    autoFocus\r\n-                    onChange={(e) => setTitle(e.target.value)}\r\n-                  />\r\n-                  <br/>\r\n-                  <label>Description</label><br/>\r\n-                  <textarea\r\n-                    placeholder=\"Say us something about this place.\"\r\n-                    onChange={(e) => setDesc(e.target.value)}\r\n-                  />\r\n-                  <br/>\r\n-                  <label>Rating</label>\r\n-                  <select onChange={(e) => setStar(e.target.value)}>\r\n-                    <option value=\"1\">1</option>\r\n-                    <option value=\"2\">2</option>\r\n-                    <option value=\"3\">3</option>\r\n-                    <option value=\"4\">4</option>\r\n-                    <option value=\"5\">5</option>\r\n-                  </select>\r\n-                  <br/>\r\n-                  <button type=\"submit\" className=\"submitButton\">\r\n-                    Add Pin\r\n-                  </button>\r\n-                </form>\r\n-              </div>\r\n-            </Popup>\r\n-          </>\r\n-        )}\r\n-        {currentUsername ? (\r\n-          <button className=\"button logout\" onClick={handleLogout}>\r\n-            Log out\r\n-          </button>\r\n-        ) : (\r\n-          <div className=\"buttons\">\r\n-            <button className=\"button login\" onClick={() => setShowLogin(true)}>\r\n-              Log in\r\n-            </button>\r\n-            <button\r\n-              className=\"button register\"\r\n-              onClick={() => setShowRegister(true)}\r\n-            >\r\n-              Register\r\n-            </button>\r\n-          </div>\r\n-        )}\r\n-        {showRegister && <Register setShowRegister={setShowRegister} />}\r\n-        {showLogin && (\r\n-          <Login\r\n-            setShowLogin={setShowLogin}\r\n-            setCurrentUsername={setCurrentUsername}\r\n-            myStorage={myStorage}\r\n-          />\r\n-        )}\r\n-      </ReactMapGL>\r\n-    </div>\r\n-  );\r\n-}\r\n-\r\n-export default Map_admin\r\n"
                }
            ],
            "date": 1633813319072,
            "name": "Commit-0",
            "content": "import React from 'react'\r\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Room, Star, StarBorder } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\n\r\nfunction Map_admin() {\r\n  const myStorage = window.localStorage;\r\n  const [currentUsername, setCurrentUsername] = useState(myStorage.getItem(\"user\"));\r\n  const [pins, setPins] = useState([]);\r\n  const [currentPlaceId, setCurrentPlaceId] = useState(null);\r\n  const [newPlace, setNewPlace] = useState(null);\r\n  const [title, setTitle] = useState(null);\r\n  const [desc, setDesc] = useState(null);\r\n  const [star, setStar] = useState(0);\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 7.8731,\r\n    longitude: 80.7718,\r\n    zoom: 6.5,\r\n  });\r\n  {/const [showRegister, setShowRegister] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n\r\n  const handleMarkerClick = (id, lat, long) => {\r\n    setCurrentPlaceId(id);\r\n    setViewport({ ...viewport, latitude: lat, longitude: long });\r\n  };\r\n\r\n  const handleAddClick = (e) => {\r\n    const [longitude, latitude] = e.lngLat;\r\n    setNewPlace({\r\n      lat: latitude,\r\n      long: longitude,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newPin = {\r\n      username: currentUsername,\r\n      title,\r\n      desc,\r\n      rating: star,\r\n      lat: newPlace.lat,\r\n      long: newPlace.long,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/pins\", newPin);\r\n      setPins([...pins, res.data]);\r\n      setNewPlace(null);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getPins = async () => {\r\n      try {\r\n        const allPins = await axios.get(\"/pins\");\r\n        setPins(allPins.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPins();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    setCurrentUsername(null);\r\n    myStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        transitionDuration=\"200\"\r\n        mapStyle=\"mapbox://styles/safak/cknndpyfq268f17p53nmpwira\"\r\n        onViewportChange={(viewport) => setViewport(viewport)}\r\n        onDblClick={currentUsername && handleAddClick}\r\n      >\r\n        {pins.map((p) => (\r\n          <>\r\n            <Marker\r\n              latitude={p.lat}\r\n              longitude={p.long}\r\n              offsetLeft={-3.5 * viewport.zoom}\r\n              offsetTop={-7 * viewport.zoom}\r\n            >\r\n              <Room\r\n                style={{\r\n                  fontSize: 7 * viewport.zoom,\r\n                  color:\r\n                    currentUsername === p.username ? \"tomato\" : \"slateblue\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleMarkerClick(p._id, p.lat, p.long)}\r\n              />\r\n            </Marker>\r\n            {p._id === currentPlaceId && (\r\n              <Popup\r\n                key={p._id}\r\n                latitude={p.lat}\r\n                longitude={p.long}\r\n                closeButton={true}\r\n                closeOnClick={false}\r\n                onClose={() => setCurrentPlaceId(null)}\r\n                anchor=\"left\"\r\n              >\r\n                <div className=\"card\">\r\n                  <label>Place - </label>\r\n                  <h4 className=\"place\"><b>{p.title}</b></h4>\r\n                  <label>Description</label>\r\n                  <h4><p className=\"desc\"><b>{p.desc}</b></p></h4>\r\n                  <label>Rating</label>\r\n                  <div className=\"stars\">\r\n                    {Array(p.rating).fill(<Star className=\"star\" />)}\r\n                  </div>\r\n                  <label hidden>Information</label>\r\n                  <span hidden className=\"username\">\r\n                    Created by <b hidden>{p.username}</b>\r\n                  </span>\r\n                  <span hidden className=\"date\">{format(p.createdAt)}</span>\r\n                </div>\r\n              </Popup>\r\n            )}\r\n          </>\r\n        ))}\r\n        {newPlace && (\r\n          <>\r\n            <Marker\r\n              latitude={newPlace.lat}\r\n              longitude={newPlace.long}\r\n              offsetLeft={-3.5 * viewport.zoom}\r\n              offsetTop={-7 * viewport.zoom}\r\n            >\r\n              <Room\r\n                style={{\r\n                  fontSize: 7 * viewport.zoom,\r\n                  color: \"tomato\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            </Marker>\r\n            <Popup\r\n              latitude={newPlace.lat}\r\n              longitude={newPlace.long}\r\n              closeButton={true}\r\n              closeOnClick={false}\r\n              onClose={() => setNewPlace(null)}\r\n              anchor=\"left\"\r\n            >\r\n              <div>\r\n                <form onSubmit={handleSubmit}>\r\n                  <label>Title</label><br/>\r\n                  <input\r\n                    placeholder=\"Enter a title\"\r\n                    autoFocus\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                  <br/>\r\n                  <label>Description</label><br/>\r\n                  <textarea\r\n                    placeholder=\"Say us something about this place.\"\r\n                    onChange={(e) => setDesc(e.target.value)}\r\n                  />\r\n                  <br/>\r\n                  <label>Rating</label>\r\n                  <select onChange={(e) => setStar(e.target.value)}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                  </select>\r\n                  <br/>\r\n                  <button type=\"submit\" className=\"submitButton\">\r\n                    Add Pin\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </Popup>\r\n          </>\r\n        )}\r\n        {currentUsername ? (\r\n          <button className=\"button logout\" onClick={handleLogout}>\r\n            Log out\r\n          </button>\r\n        ) : (\r\n          <div className=\"buttons\">\r\n            <button className=\"button login\" onClick={() => setShowLogin(true)}>\r\n              Log in\r\n            </button>\r\n            <button\r\n              className=\"button register\"\r\n              onClick={() => setShowRegister(true)}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        )}\r\n        {showRegister && <Register setShowRegister={setShowRegister} />}\r\n        {showLogin && (\r\n          <Login\r\n            setShowLogin={setShowLogin}\r\n            setCurrentUsername={setCurrentUsername}\r\n            myStorage={myStorage}\r\n          />\r\n        )}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map_admin\r\n"
        }
    ]
}